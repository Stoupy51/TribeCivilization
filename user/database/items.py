
# Here is a useful link if you want to override autogenerated models: https://github.com/PixiGeko/Minecraft-default-assets/tree/latest/assets/minecraft/models/block

# Import database helper and setup constants
from python_datapack.utils.database_helper import *
from python_datapack.utils.ingredients import *
from python_datapack.constants import *

# Categories
MATERIAL: str = "material"
MISCELLANEOUS: str = "miscellaneous"

# Main function should return a database
def main(config: dict, database: dict[str, dict]) -> dict[str, dict]:
	namespace: str = config["namespace"]

	## Material items
	# Basic items
	database["astral_powder"] = {"id": CUSTOM_ITEM_VANILLA, "category": MATERIAL, RESULT_OF_CRAFTING: [
		{"type":"crafting_shapeless","result_count":4,"group":"astral_powder","category":MATERIAL,"ingredients": [ingr_repr("blue_star", namespace)]},
	]}
	database["diamond_meteorite"] = {"id": CUSTOM_ITEM_VANILLA, "category": MATERIAL}
	database["emerald_meteorite"] = {"id": CUSTOM_ITEM_VANILLA, "category": MATERIAL}
	database["iron_meteorite"] = {"id": CUSTOM_ITEM_VANILLA, "category": MATERIAL}
	database["zinc_meteorite"] = {"id": CUSTOM_ITEM_VANILLA, "category": MATERIAL}
	database["blue_star"] = {"id": CUSTOM_ITEM_VANILLA, "category": MATERIAL}

	# Player teams crystals
	colors: list[str] = ["purple", "yellow", "green", "cyan"]
	for color in colors:
		# Get the other colors and create a list of ingredients (3 other = 1 of the current color)
		other_colors: list[str] = [c for c in colors if c != color]
		ingredients: list[dict] = [ingr_repr(f"{c}_crystal", namespace) for c in other_colors]

		# Add the item to the database (3 other crystals = 1 of the current color)
		database[f"{color}_crystal"] = {
			"id": CUSTOM_ITEM_VANILLA, "category": MATERIAL,
			WIKI_COMPONENT: [{"text":"Lors de la mort du survivant de la même couleur, ce crystal est droppé."}],
			RESULT_OF_CRAFTING: [{"type":"crafting_shapeless","result_count":1,"group":"team_crystal","category":MATERIAL,"ingredients": ingredients}]
		}



	## Miscellaneous items
	# Gold fish craftable from 8 gold nuggets and 1 fish
	eight_nuggets: list[dict] = 8 * [ingr_repr("minecraft:gold_nugget")]
	database["gold_fish"] = {
		"id": "minecraft:golden_apple",
		"category": MISCELLANEOUS,
		RESULT_OF_CRAFTING: [
			{"type":"crafting_shapeless","result_count":1,"group":"gold_fish","category":MISCELLANEOUS,"ingredients": eight_nuggets + [ingr_repr("minecraft:cod")]},
			{"type":"crafting_shapeless","result_count":1,"group":"gold_fish","category":MISCELLANEOUS,"ingredients": eight_nuggets + [ingr_repr("minecraft:salmon")]},
			{"type":"crafting_shapeless","result_count":1,"group":"gold_fish","category":MISCELLANEOUS,"ingredients": eight_nuggets + [ingr_repr("minecraft:tropical_fish")]},
		]
	}

	# Life Crystal
	database["life_crystal"] = {"id": "minecraft:golden_apple", "category": MISCELLANEOUS, RESULT_OF_CRAFTING: [
		{"type":"crafting_shapeless","result_count":1,"group":"life_crystal","category":MISCELLANEOUS,"ingredients": [
			ingr_repr("astral_powder", namespace),
			ingr_repr("purple_crystal", namespace),
			ingr_repr("yellow_crystal", namespace),
			ingr_repr("green_crystal", namespace),
			ingr_repr("cyan_crystal", namespace)
		]},
	]}

	# Lunar compass (crafted with all 4 meteorites and a blue star)
	database["lunar_compass"] = {"id": CUSTOM_ITEM_VANILLA, "category": MISCELLANEOUS, RESULT_OF_CRAFTING: [
		{"type":"crafting_shapeless","result_count":1,"group":"lunar_compass","category":MISCELLANEOUS,"ingredients": [
			ingr_repr("diamond_meteorite", namespace),
			ingr_repr("emerald_meteorite", namespace),
			ingr_repr("iron_meteorite", namespace),
			ingr_repr("zinc_meteorite", namespace),
			ingr_repr("blue_star", namespace),
		]},
	]}

	# Letter (TODO: find a use for it)
	database["letter"] = {"id": CUSTOM_ITEM_VANILLA, "category": MISCELLANEOUS}

	# Return database
	return database

